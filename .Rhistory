# Load Packages -----------------------------------------------------------
pacman::p_load(tidyverse, here, haven, labelled)
getwd()
here::here()
here::i_am("Desktop/Thesis")
here::i_am("Desktop/Thesis")
here::here()
here::i_am("Desktop/Data Sceinece Toolkit/W5_project_management/project1/code/00_clean_data.R")
absolute_path_to_data <- here::here("raw_data", "vrc01_data.csv")
data <- read.csv(absolute_path_to_data, header = TRUE)
here::i_am("Desktop/Data Sceinece Toolkit/W5_project_management/project1")
/code/00_clean_data.R
here::i_am("Desktop/Data Sceinece Toolkit/W5_project_management/project1/code/00_clean_data.R")
management", "project1" "raw_data", "vrc01_data.csv")
absolute_path_to_data <- here::here("Desktop", "Data Sceinece Toolkit",
"W5_project_management", "project1" "raw_data", "vrc01_data.csv")
absolute_path_to_data <- here::here("Desktop", "Data Sceinece Toolkit",
"W5_project_management", "project1", "raw_data", "vrc01_data.csv")
data <- read.csv(absolute_path_to_data, header = TRUE)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
saveRDS(
data,
file = here::here("output/data_clean.rds")
)
# the path specifies where the data are
data_path <- "~/Desktop/High Thru-pu"
reads <- fread(sprintf('%s/gene_reads_2017-06-05_v8_whole_blood.gct.gz', data_path))
library(ggplot2)
library(readr)
library(data.table)
library(dplyr)
# the path specifies where the data are
data_path <- "~/Desktop/High Thru-pu"
reads <- fread(sprintf('%s/gene_reads_2017-06-05_v8_whole_blood.gct.gz', data_path))
library(ggplot2)
library(readr)
library(data.table)
library(dplyr)
# the path specifies where the data are
data_path <- "~/Desktop/Bioconductor/M1"
reads <- fread(sprintf('%s/gene_reads_2017-06-05_v8_whole_blood.gct.gz', data_path))
View(reads)
# View(reads) # good with Rstudio
reads[1:3,1:15]
dim(reads)
genemart <- fread('mart_export.txt')
dim(genemart) #86k genes covered
colnames(genemart)
tab <- table(genemart$`Gene type`)
tab[tab>100] %>% sort(decreasing = T) # 20k protein coding genes
View(genemart)
# compute gene length
genemart$length <- genemart$`Gene end (bp)` - genemart$`Gene start (bp)`
hist(genemart$length)
hist(log(genemart$length))
# match the dictionary with the GTEx data
length(intersect(genemart$`Gene stable ID version`, reads$Name)) # 28k genes matched
reads$length <- genemart$length[match(reads$Name, genemart$`Gene stable ID version`)]
gene_total_counts <- rowSums(reads[,4:(ncol(reads)-1)])
df <- data.frame(gene_length = reads$length, counts = gene_total_counts)
ggplot(df, aes(x=log(gene_length),y=log(counts+1))) +
geom_point(alpha=0.2)+
geom_smooth() +
theme_classic(base_size=20)
cor(df$gene_length, df$counts, use = 'complete.obs', method='spearman')
# Sequencing depths are defined as the sum of all read counts in a sample.
seq_depth <- colSums(reads[,4:(ncol(reads)-1)])
hist(seq_depth)
hist(log(seq_depth+1))
pwd
here::i_am(
"code/01_make_output.R"
)
here::i_am(
"code/01_make_output.R"
)
setwd("~/Desktop/Data Science Toolkit/final project")
install.packages("here")
install.packages("here")
